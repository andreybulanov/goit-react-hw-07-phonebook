{"version":3,"sources":["Components/App/App.styled.jsx","Store/contactsSlice.js","Components/ContactsForm/ContactsForm.styled.jsx","Components/Buttons/Buttons.styled.jsx","Components/ContactsForm/ContactsForm.js","Selectors/contacts-selectors.js","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.js","Store/filterSlice.js","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.js","Components/App/App.js","Store/store.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactData","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Form","form","Label","label","Input","input","Button","button","ContactsForm","useState","name","setName","number","setNumber","contacts","data","handleChange","e","target","value","action","onSubmit","preventDefault","find","contact","toLowerCase","toast","icon","style","borderRadius","background","color","duration","htmlFor","onChange","type","pattern","title","required","getFilter","state","filter","List","ul","ListItem","li","ContactsList","filterValue","useSelector","includes","map","id","phone","onClick","filterSlice","createSlice","initialState","reduser","payload","actions","Wrapper","div","Filter","dispatch","useDispatch","App","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4bf15f7d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\nmargin-left: 75px;\ncolor: gray;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 75px;\n`;","import { createApi, fetchBaseQuery  } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n    reducerPath: \"contactsApi\",\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: \"https://617187f3c20f3a001705fdb5.mockapi.io/api/v1\",\r\n    }),\r\n    tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: (contactData) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: contactData,\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 40px;\n  padding: 30px;\n  border: none;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-top: 4px;\n`;","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 10px;\n  margin-top: 8px;\n  font-size: 14px;\n  background-color: #0eebdc;\n  border: none;\n  border-radius: 10px;\n  &:hover,\n  &:active {\n    cursor: pointer;\n    background-color: #15c2b6;\n  }\n`;","import { useState } from 'react';\nimport { useCreateContactMutation, useFetchContactsQuery } from '../../Store/contactsSlice';\n\nimport { Form, Label, Input } from './ContactsForm.styled';\nimport { Button } from '../Buttons/Buttons.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\nfunction ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreateContactMutation();\n  const {data: contacts} = useFetchContactsQuery();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    const checkContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkContact) {\n      toast(`${name} is already in contacts`, {\n        icon: '👏',\n        style: {\n          borderRadius: '10px',\n          background: '#333',\n          color: '#fff',\n          duration: 4000,\n        },\n      });\n      return;\n    };\n    \n    createContact({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <Button type=\"submit\"> Add contact</Button>\n      </Form>\n      <Toaster />\n    </>\n  );\n}\n\nexport default ContactsForm;\n","export const getFilter = (state) => state.filter;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style-type: circle;\n  margin-left: 20px;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 8px;\n  font-size: 18px;\n`;","import { useSelector } from 'react-redux';\nimport { useFetchContactsQuery, useDeleteContactMutation } from '../../Store/contactsSlice';\nimport { getFilter } from '../../Selectors/contacts-selectors';\nimport { List, ListItem } from './ContactsList.styled';\nimport { Button } from '../Buttons/Buttons.styled';\n\nfunction ContactsList() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  const filterValue = useSelector(state => getFilter(state));\n  contacts.filter(contact => contact.name.toLowerCase().includes(filterValue));\n\n  return (\n    <div>\n      <List>\n        {contacts.map(({ id, name, number, phone}) => (\n          <ListItem key={id}>\n              {name} - {number}{' '}\n              <Button type=\"button\" onClick={() => deleteContact(id)}>\n                Delete\n              </Button>\n            </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default ContactsList;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = \"\";\r\n\r\nconst filterSlice = createSlice({\r\n    name: \"contacts/filter\",\r\n    initialState,\r\n    reduser : {\r\n        filter: (state, {payload}) => (state = payload),\r\n    },\r\n});\r\n\r\nexport const { filter } = filterSlice.actions;\r\nexport default filterSlice.reduser;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 60px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-top: 4px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { filter } from '../../Store/filterSlice';\nimport { getFilter } from '../../Selectors/contacts-selectors';\nimport { Wrapper, Label, Input } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => getFilter(state));\n  const onChange = (e) => {\n    dispatch(filter(e.target.value));\n  }\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </Wrapper>\n  );\n}\n\nexport default Filter;","import { PrimaryTitle, SecondaryTitle } from './App.styled.jsx';\nimport ContactsForm from '../ContactsForm/ContactsForm';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\n\nexport function App() {\n  return (\n    <>\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactsForm />\n\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport {contactsApi} from './contactsSlice'\nimport filter from './filterSlice';\nimport logger from \"redux-logger\";\n\nexport default configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './Store/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}