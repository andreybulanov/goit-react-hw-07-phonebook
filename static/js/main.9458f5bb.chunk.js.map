{"version":3,"sources":["Components/App/App.styled.jsx","Store/contactsSlice.js","Components/ContactsForm/ContactsForm.styled.jsx","Components/Buttons/Buttons.styled.jsx","Components/ContactsForm/ContactsForm.js","Components/ContactsList/ContactsList.styled.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.js","Components/ContactsList/ContactsList.js","Components/App/App.js","Store/store.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactData","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Form","form","Label","label","Input","input","Button","button","ContactsForm","useState","name","setName","number","setNumber","contacts","data","handleChange","e","target","value","action","onSubmit","preventDefault","find","contact","toLowerCase","toast","icon","style","borderRadius","background","color","duration","htmlFor","onChange","type","pattern","title","required","List","ul","ListItem","li","Wrapper","div","Filter","filter","ContactsList","setContacts","useEffect","normalizeFilter","filterValue","includes","map","id","onClick","App","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9458f5bb.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\nmargin-left: 75px;\ncolor: gray;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 75px;\n`;","import { createApi, fetchBaseQuery  } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n    reducerPath: \"contactsApi\",\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: \"https://617187f3c20f3a001705fdb5.mockapi.io/api/v1\",\r\n    }),\r\n    tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: (contactData) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: contactData,\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;\r\n\r\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 40px;\n  padding: 30px;\n  border: none;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-top: 4px;\n`;","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 10px;\n  margin-top: 8px;\n  font-size: 14px;\n  background-color: #0eebdc;\n  border: none;\n  border-radius: 10px;\n  &:hover,\n  &:active {\n    cursor: pointer;\n    background-color: #15c2b6;\n  }\n`;","import { useState } from 'react';\nimport { useCreateContactMutation, useFetchContactsQuery } from '../../Store/contactsSlice';\n\nimport { Form, Label, Input } from './ContactsForm.styled';\nimport { Button } from '../Buttons/Buttons.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\nfunction ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreateContactMutation();\n  const {data: contacts} = useFetchContactsQuery();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    const checkContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkContact) {\n      toast(`${name} is already in contacts`, {\n        icon: 'üëè',\n        style: {\n          borderRadius: '10px',\n          background: '#333',\n          color: '#fff',\n          duration: 4000,\n        },\n      });\n      return;\n    };\n    \n    createContact({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"–ò–º—è –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤, –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞, —Ç–∏—Ä–µ –∏ –ø—Ä–æ–±–µ–ª–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan –∏ —Ç. –ø.\"\n          required\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ü–∏—Ñ—Ä –∏ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã, —Ç–∏—Ä–µ, –∫—Ä—É–≥–ª—ã–µ —Å–∫–æ–±–∫–∏ –∏ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +\"\n          required\n        />\n        <Button type=\"submit\"> Add contact</Button>\n      </Form>\n      <Toaster />\n    </>\n  );\n}\n\nexport default ContactsForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style-type: circle;\n  margin-left: 20px;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 8px;\n  font-size: 18px;\n`;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 60px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-top: 4px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n`;","import { Wrapper, Label, Input } from './Filter.styled';\n\nfunction Filter({ filter }) {\n  const onChange = e => {\n    filter(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input type=\"text\" name=\"filter\" onChange={onChange} />\n    </Wrapper>\n  );\n}\n\nexport default Filter;\n\n// –Ø —ç—Ç–æ –æ—Å—Ç–∞–≤–ª—é –∫–∞–∫ –ø—Ä–∏–º–µ—Ä \n\n// import { useSelector, useDispatch } from 'react-redux';\n// import { filter } from '../../Store/filterSlice';\n// import { getFilter } from '../../Selectors/contacts-selectors';\n// import { Wrapper, Label, Input } from './Filter.styled';\n\n// function Filter() {\n//   const dispatch = useDispatch();\n//   const value = useSelector((state) => getFilter(state));\n//   const onChange = (e) => {\n//     dispatch(filter(e.target.value));\n//   }\n\n//   return (\n//     <Wrapper>\n//       <Label htmlFor=\"filter\">Find contacts by name</Label>\n//       <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n//     </Wrapper>\n//   );\n// }\n\n// export default Filter;\n\n","import { useState, useEffect } from 'react';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from '../../Store/contactsSlice';\n\nimport { List, ListItem } from './ContactsList.styled';\nimport { Button } from '../Buttons/Buttons.styled';\nimport Filter from 'Components/Filter/Filter';\n\nfunction ContactsList() {\n  const [contacts, setContacts] = useState([]);\n  const { data } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  useEffect(() => {\n    if (data) {\n      setContacts(data);\n    }\n  }, [data]);\n\n  const onFilterContacts = filter => {\n    if (filter) {\n      const normalizeFilter = filter.toLowerCase();\n      const filterValue = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizeFilter),\n      );\n\n      setContacts(filterValue);\n    } else {\n      setContacts(data);\n    }\n  };\n\n  return (\n    <div>\n      <Filter filter={onFilterContacts} />\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            {name} - {number}{' '}\n            <Button type=\"button\" onClick={() => deleteContact(id)}>\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default ContactsList;\n\n// –Ø —ç—Ç–æ –æ—Å—Ç–∞–≤–ª—é –∫–∞–∫ –ø—Ä–∏–º–µ—Ä\n\n// import { useSelector } from 'react-redux';\n// import { useFetchContactsQuery, useDeleteContactMutation } from '../../Store/contactsSlice';\n// import { getFilter } from '../../Selectors/contacts-selectors';\n// import { List, ListItem } from './ContactsList.styled';\n// import { Button } from '../Buttons/Buttons.styled';\n\n// function ContactsList() {\n//   const { data: contacts } = useFetchContactsQuery();\n//   const [deleteContact] = useDeleteContactMutation();\n//   const filterValue = useSelector(state => getFilter(state));\n//   contacts.filter(contact => contact.name.toLowerCase().includes(filterValue));\n  \n\n//   return (\n//     <>\n//       <List>\n//         {contacts.map(({ id, name, number}) => (\n//           <ListItem key={id}>\n//               {name} - {number}{' '}\n//               <Button type=\"button\" onClick={() => deleteContact(id)}>\n//                 Delete\n//               </Button>\n//             </ListItem>\n//         ))}\n//       </List>\n//     </>\n//   );\n// }\n\n// export default ContactsList;\n","import { PrimaryTitle, SecondaryTitle } from './App.styled.jsx';\nimport ContactsForm from '../ContactsForm/ContactsForm';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\n\nexport function App() {\n  return (\n    <>\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactsForm />\n\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport {contactsApi} from './contactsSlice'\nimport filter from './filterSlice';\nimport logger from \"redux-logger\";\n\nexport default configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './Store/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}